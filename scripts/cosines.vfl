
# create a pseudorandom number generator.
rand = rng(seed: 7321);

# create a dataset.
dat = data(file: '../tests/cosines/cosines.dat');

# define factor prior parameters.
mu = 0.0;
tau = 1.0e-5;

# create a model.
mdl = tauvfr(
  data: dat,
  tau: 1.0,
  nu: 1.0e-6,
  factors: 4 * [cosine(mu: mu, tau: tau)]
);

# randomize the factor means.
for j in std.range(n: mdl.M) {
  mdl.factors[j].mu = rand.normal(mu: mu, tau: tau);
}

# create a full-gradient optimizer.
opt = fg(
  model: mdl,
  l0: 0.001
);

# optimize.
opt.execute();

# build gridded datasets for prediction.
G = [0.0, 1.0e-3, 0.5];
mean = data(grid: G);
var = data(grid: G);

# compute the model prediction.
mdl.predict(mean: mean, var: var);

# write the prediction results.
mean.write(file: 'mean.dat');
var.write(file: 'var.dat');

