
# create a model.
mdl = vfr(
  alpha0: 1000,
  beta0: 10,
  nu: 1e-3,
  data: data(file: 'sinc.dat')
);

# add each data point to the model.
for i in std.range(n: mdl.data.N) {
  xi = mdl.data[i][1];
  mdl.add(factor: fixedImpulse(mu: xi[0], tau: 0.001));
}

# initialize the factor precisions.
for j in std.range(n: mdl.M) {
  mdl.factors[j].tau = 1;
}

# create a full-gradient optimizer.
opt = fg(
  model: mdl,
  lipschitzInit: 0.001
);

# optimize.
opt.execute();

# build gridded datasets for prediction.
G = [[-10, 1e-3, 10]];
mean = data(grid: G);
var = data(grid: G);

# compute the model prediction.
mdl.predict(mean: mean, var: var);

# write the prediction results.
mean.write(file: 'mean.dat');
var.write(file: 'var.dat');

